// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.sio.jnetmap.web;

import org.sio.jnetmap.domain.Band;
import org.sio.jnetmap.domain.Building;
import org.sio.jnetmap.domain.Dispatcher;
import org.sio.jnetmap.domain.Modules;
import org.sio.jnetmap.domain.Outlet;
import org.sio.jnetmap.domain.Port;
import org.sio.jnetmap.domain.Probe;
import org.sio.jnetmap.domain.Role;
import org.sio.jnetmap.domain.Room;
import org.sio.jnetmap.domain.Switches;
import org.sio.jnetmap.domain.User;
import org.sio.jnetmap.domain.Vlan;
import org.sio.jnetmap.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Band, String> ApplicationConversionServiceFactoryBean.getBandToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Band, java.lang.String>() {
            public String convert(Band band) {
                return new StringBuilder().append(band.getNum()).toString();
            }
        };
    }
    
    public Converter<Long, Band> ApplicationConversionServiceFactoryBean.getIdToBandConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Band>() {
            public org.sio.jnetmap.domain.Band convert(java.lang.Long id) {
                return Band.findBand(id);
            }
        };
    }
    
    public Converter<String, Band> ApplicationConversionServiceFactoryBean.getStringToBandConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Band>() {
            public org.sio.jnetmap.domain.Band convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Band.class);
            }
        };
    }
    
    public Converter<Building, String> ApplicationConversionServiceFactoryBean.getBuildingToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Building, java.lang.String>() {
            public String convert(Building building) {
                return new StringBuilder().append(building.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Building> ApplicationConversionServiceFactoryBean.getIdToBuildingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Building>() {
            public org.sio.jnetmap.domain.Building convert(java.lang.Long id) {
                return Building.findBuilding(id);
            }
        };
    }
    
    public Converter<String, Building> ApplicationConversionServiceFactoryBean.getStringToBuildingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Building>() {
            public org.sio.jnetmap.domain.Building convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Building.class);
            }
        };
    }
    
    public Converter<Dispatcher, String> ApplicationConversionServiceFactoryBean.getDispatcherToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Dispatcher, java.lang.String>() {
            public String convert(Dispatcher dispatcher) {
                return new StringBuilder().append(dispatcher.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Dispatcher> ApplicationConversionServiceFactoryBean.getIdToDispatcherConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Dispatcher>() {
            public org.sio.jnetmap.domain.Dispatcher convert(java.lang.Long id) {
                return Dispatcher.findDispatcher(id);
            }
        };
    }
    
    public Converter<String, Dispatcher> ApplicationConversionServiceFactoryBean.getStringToDispatcherConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Dispatcher>() {
            public org.sio.jnetmap.domain.Dispatcher convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Dispatcher.class);
            }
        };
    }
    
    public Converter<Modules, String> ApplicationConversionServiceFactoryBean.getModulesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Modules, java.lang.String>() {
            public String convert(Modules modules) {
                return new StringBuilder().append(modules.getNum()).toString();
            }
        };
    }
    
    public Converter<Long, Modules> ApplicationConversionServiceFactoryBean.getIdToModulesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Modules>() {
            public org.sio.jnetmap.domain.Modules convert(java.lang.Long id) {
                return Modules.findModules(id);
            }
        };
    }
    
    public Converter<String, Modules> ApplicationConversionServiceFactoryBean.getStringToModulesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Modules>() {
            public org.sio.jnetmap.domain.Modules convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Modules.class);
            }
        };
    }
    
    public Converter<Outlet, String> ApplicationConversionServiceFactoryBean.getOutletToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Outlet, java.lang.String>() {
            public String convert(Outlet outlet) {
                return new StringBuilder().append(outlet.getNum()).toString();
            }
        };
    }
    
    public Converter<Long, Outlet> ApplicationConversionServiceFactoryBean.getIdToOutletConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Outlet>() {
            public org.sio.jnetmap.domain.Outlet convert(java.lang.Long id) {
                return Outlet.findOutlet(id);
            }
        };
    }
    
    public Converter<String, Outlet> ApplicationConversionServiceFactoryBean.getStringToOutletConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Outlet>() {
            public org.sio.jnetmap.domain.Outlet convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Outlet.class);
            }
        };
    }
    
    public Converter<Port, String> ApplicationConversionServiceFactoryBean.getPortToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Port, java.lang.String>() {
            public String convert(Port port) {
                return new StringBuilder().append(port.getNum()).toString();
            }
        };
    }
    
    public Converter<Long, Port> ApplicationConversionServiceFactoryBean.getIdToPortConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Port>() {
            public org.sio.jnetmap.domain.Port convert(java.lang.Long id) {
                return Port.findPort(id);
            }
        };
    }
    
    public Converter<String, Port> ApplicationConversionServiceFactoryBean.getStringToPortConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Port>() {
            public org.sio.jnetmap.domain.Port convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Port.class);
            }
        };
    }
    
    public Converter<Probe, String> ApplicationConversionServiceFactoryBean.getProbeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Probe, java.lang.String>() {
            public String convert(Probe probe) {
                return new StringBuilder().append(probe.getMac()).append(' ').append(probe.getNum()).toString();
            }
        };
    }
    
    public Converter<Long, Probe> ApplicationConversionServiceFactoryBean.getIdToProbeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Probe>() {
            public org.sio.jnetmap.domain.Probe convert(java.lang.Long id) {
                return Probe.findProbe(id);
            }
        };
    }
    
    public Converter<String, Probe> ApplicationConversionServiceFactoryBean.getStringToProbeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Probe>() {
            public org.sio.jnetmap.domain.Probe convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Probe.class);
            }
        };
    }
    
    public Converter<Role, String> ApplicationConversionServiceFactoryBean.getRoleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Role, java.lang.String>() {
            public String convert(Role role) {
                return new StringBuilder().append(role.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Role> ApplicationConversionServiceFactoryBean.getIdToRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Role>() {
            public org.sio.jnetmap.domain.Role convert(java.lang.Long id) {
                return Role.findRole(id);
            }
        };
    }
    
    public Converter<String, Role> ApplicationConversionServiceFactoryBean.getStringToRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Role>() {
            public org.sio.jnetmap.domain.Role convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Role.class);
            }
        };
    }
    
    public Converter<Room, String> ApplicationConversionServiceFactoryBean.getRoomToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Room, java.lang.String>() {
            public String convert(Room room) {
                return new StringBuilder().append(room.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Room> ApplicationConversionServiceFactoryBean.getIdToRoomConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Room>() {
            public org.sio.jnetmap.domain.Room convert(java.lang.Long id) {
                return Room.findRoom(id);
            }
        };
    }
    
    public Converter<String, Room> ApplicationConversionServiceFactoryBean.getStringToRoomConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Room>() {
            public org.sio.jnetmap.domain.Room convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Room.class);
            }
        };
    }
    
    public Converter<Switches, String> ApplicationConversionServiceFactoryBean.getSwitchesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Switches, java.lang.String>() {
            public String convert(Switches switches) {
                return new StringBuilder().append(switches.getIp()).append(' ').append(switches.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Switches> ApplicationConversionServiceFactoryBean.getIdToSwitchesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Switches>() {
            public org.sio.jnetmap.domain.Switches convert(java.lang.Long id) {
                return Switches.findSwitches(id);
            }
        };
    }
    
    public Converter<String, Switches> ApplicationConversionServiceFactoryBean.getStringToSwitchesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Switches>() {
            public org.sio.jnetmap.domain.Switches convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Switches.class);
            }
        };
    }
    
    public Converter<User, String> ApplicationConversionServiceFactoryBean.getUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.User, java.lang.String>() {
            public String convert(User user) {
                return new StringBuilder().append(user.getUsername()).append(' ').append(user.getPassword()).append(' ').append(user.getPasswordConfirmation()).toString();
            }
        };
    }
    
    public Converter<Long, User> ApplicationConversionServiceFactoryBean.getIdToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.User>() {
            public org.sio.jnetmap.domain.User convert(java.lang.Long id) {
                return User.findUser(id);
            }
        };
    }
    
    public Converter<String, User> ApplicationConversionServiceFactoryBean.getStringToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.User>() {
            public org.sio.jnetmap.domain.User convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), User.class);
            }
        };
    }
    
    public Converter<Vlan, String> ApplicationConversionServiceFactoryBean.getVlanToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Vlan, java.lang.String>() {
            public String convert(Vlan vlan) {
                return new StringBuilder().append(vlan.getName()).append(' ').append(vlan.getNum()).toString();
            }
        };
    }
    
    public Converter<Long, Vlan> ApplicationConversionServiceFactoryBean.getIdToVlanConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Vlan>() {
            public org.sio.jnetmap.domain.Vlan convert(java.lang.Long id) {
                return Vlan.findVlan(id);
            }
        };
    }
    
    public Converter<String, Vlan> ApplicationConversionServiceFactoryBean.getStringToVlanConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Vlan>() {
            public org.sio.jnetmap.domain.Vlan convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Vlan.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getBandToStringConverter());
        registry.addConverter(getIdToBandConverter());
        registry.addConverter(getStringToBandConverter());
        registry.addConverter(getBuildingToStringConverter());
        registry.addConverter(getIdToBuildingConverter());
        registry.addConverter(getStringToBuildingConverter());
        registry.addConverter(getDispatcherToStringConverter());
        registry.addConverter(getIdToDispatcherConverter());
        registry.addConverter(getStringToDispatcherConverter());
        registry.addConverter(getModulesToStringConverter());
        registry.addConverter(getIdToModulesConverter());
        registry.addConverter(getStringToModulesConverter());
        registry.addConverter(getOutletToStringConverter());
        registry.addConverter(getIdToOutletConverter());
        registry.addConverter(getStringToOutletConverter());
        registry.addConverter(getPortToStringConverter());
        registry.addConverter(getIdToPortConverter());
        registry.addConverter(getStringToPortConverter());
        registry.addConverter(getProbeToStringConverter());
        registry.addConverter(getIdToProbeConverter());
        registry.addConverter(getStringToProbeConverter());
        registry.addConverter(getRoleToStringConverter());
        registry.addConverter(getIdToRoleConverter());
        registry.addConverter(getStringToRoleConverter());
        registry.addConverter(getRoomToStringConverter());
        registry.addConverter(getIdToRoomConverter());
        registry.addConverter(getStringToRoomConverter());
        registry.addConverter(getSwitchesToStringConverter());
        registry.addConverter(getIdToSwitchesConverter());
        registry.addConverter(getStringToSwitchesConverter());
        registry.addConverter(getUserToStringConverter());
        registry.addConverter(getIdToUserConverter());
        registry.addConverter(getStringToUserConverter());
        registry.addConverter(getVlanToStringConverter());
        registry.addConverter(getIdToVlanConverter());
        registry.addConverter(getStringToVlanConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
